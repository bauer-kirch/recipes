{
    "manifests": {
        "bauer-kirch/webpack-encore-meta": {
            "manifest": {
                "gitignore": [
                    "/public/build",
                    "/public/webpack-dev"
                ],
                "copy-from-recipe": {
                    ".gitlab-ci/": ".gitlab-ci/",
                    "config/": "%CONFIG_DIR%/",
                    "docker/": "docker/",
                    "webpack.config.js": "webpack.config.js"
                },
                "docker-compose": {
                    "docker-compose.yml": {
                        "services": [
                            "webpack:",
                            "  image: 'gitlab.lan.bauer-kirch.de:5001/eap/php/docker-aux/webpack:latest'",
                            "  volumes:",
                            "    - ./:/var/www/app/:cached",
                            "    - npm-cache:/root/.npm:cached"
                        ],
                        "volumes": [
                            "npm-cache:"
                        ]
                    }
                }
            },
            "files": {
                ".gitlab-ci/node.yml": {
                    "contents": [
                        "variables:",
                        "  NODE_IMAGE: \"gitlab.lan.bauer-kirch.de:5001/eap/php/docker-aux/webpack:latest\"",
                        "",
                        "build_npm:",
                        "  stage: build",
                        "  tags:",
                        "    - docker",
                        "  image: $NODE_IMAGE",
                        "  script:",
                        "    - time npm install",
                        "    - time npm run build",
                        "  artifacts:",
                        "    paths:",
                        "      - public/build",
                        "  only:",
                        "    - schedules",
                        "",
                        "audit_npm:",
                        "  stage: audit",
                        "  tags:",
                        "    - docker",
                        "  image: $NODE_IMAGE",
                        "  script:",
                        "    - npm audit --json",
                        "  allow_failure: true",
                        "  only:",
                        "    variables:",
                        "      - $SCHEDULE_AUDIT",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/webpack_encore.yaml": {
                    "contents": [
                        "webpack_encore:",
                        "    # The path where Encore is building the assets - i.e. Encore.setOutputPath()",
                        "    output_path: '%kernel.project_dir%/public/build'",
                        "    # If multiple builds are defined (as shown below), you can disable the default build:",
                        "    # output_path: false",
                        "",
                        "    # Set attributes that will be rendered on all script and link tags",
                        "    script_attributes:",
                        "        defer: true",
                        "        # Uncomment (also under link_attributes) if using Turbo Drive",
                        "        # https://turbo.hotwired.dev/handbook/drive#reloading-when-assets-change",
                        "        # 'data-turbo-track': reload",
                        "    # link_attributes:",
                        "        # Uncomment if using Turbo Drive",
                        "        # 'data-turbo-track': reload",
                        "",
                        "    # If using Encore.enableIntegrityHashes() and need the crossorigin attribute (default: false, or use 'anonymous' or 'use-credentials')",
                        "    # crossorigin: 'anonymous'",
                        "",
                        "    # Preload all rendered script and link tags automatically via the HTTP/2 Link header",
                        "    # preload: true",
                        "",
                        "    # Throw an exception if the entrypoints.json file is missing or an entry is missing from the data",
                        "    # strict_mode: false",
                        "",
                        "    # If you have multiple builds:",
                        "    # builds:",
                        "        # pass \"frontend\" as the 3rg arg to the Twig functions",
                        "        # {{ encore_entry_script_tags('entry1', null, 'frontend') }}",
                        "",
                        "        # frontend: '%kernel.project_dir%/public/frontend/build'",
                        "",
                        "    # Cache the entrypoints.json (rebuild Symfony's cache when entrypoints.json changes)",
                        "    # Put in config/packages/prod/webpack_encore.yaml",
                        "    # cache: true",
                        "",
                        "framework:",
                        "    assets:",
                        "        json_manifest_path: '%kernel.project_dir%/public/build/manifest.json'",
                        "",
                        "when@dev:",
                        "    webpack_encore:",
                        "        output_path: '%kernel.project_dir%/public/webpack-dev'",
                        "    framework:",
                        "        assets:",
                        "            json_manifest_path: '%kernel.project_dir%/public/webpack-dev/manifest.json'",
                        "",
                        "#when@prod:",
                        "#    webpack_encore:",
                        "#        # Cache the entrypoints.json (rebuild Symfony's cache when entrypoints.json changes)",
                        "#        # Available in version 1.2",
                        "#        cache: true",
                        "",
                        "#when@test:",
                        "#    webpack_encore:",
                        "#        strict_mode: false",
                        ""
                    ],
                    "executable": false
                },
                "docker/build-resources": {
                    "contents": [
                        "#!/usr/bin/env bash",
                        "",
                        "# Paths and configuration",
                        "BASEDIR=\"$(cd \"$(dirname \"$0\")/..\" && pwd)\"",
                        "DOT_ENV=$BASEDIR/.env",
                        "",
                        "docker run \\",
                        "  --user $(id -u):$(id -g) \\",
                        "  --workdir /var/www/app \\",
                        "  --env-file $DOT_ENV \\",
                        "  --env NPM_CONFIG_CACHE=/var/www/app/var/volumes/.npm \\",
                        "  --rm \\",
                        "  -v $BASEDIR/app:/var/www/app \\",
                        "  node:12 \\",
                        "  bash -c \"npm install; npm run build\"",
                        ""
                    ],
                    "executable": true
                },
                "docker/npm": {
                    "contents": [
                        "#!/usr/bin/env bash",
                        "",
                        "docker-compose exec webpack npm \"$@\""
                    ],
                    "executable": true
                },
                "webpack.config.js": {
                    "contents": [
                        "const Encore = require('@symfony/webpack-encore');",
                        "",
                        "// Manually configure the runtime environment if not already configured yet by the \"encore\" command.",
                        "// It's useful when you use tools that rely on webpack.config.js file.",
                        "if (!Encore.isRuntimeEnvironmentConfigured()) {",
                        "    Encore.configureRuntimeEnvironment(process.env.NODE_ENV || 'dev');",
                        "}",
                        "",
                        "Encore",
                        "    .setOutputPath(Encore.isDev() ? 'public/webpack-dev' : 'public/build')",
                        "    .setPublicPath(Encore.isDev() ? '/webpack-dev' : '/build')",
                        "    .configureDevServerOptions((options) => {",
                        "        options.hot = true;",
                        "        options.host = '0.0.0.0';",
                        "        options.port = 443;",
                        "        options.allowedHosts = 'all'",
                        "    })",
                        "",
                        "    // only needed for CDN's or sub-directory deploy",
                        "    //.setManifestKeyPrefix('build/')",
                        "",
                        "    /*",
                        "     * ENTRY CONFIG",
                        "     *",
                        "     * Each entry will result in one JavaScript file (e.g. app.js)",
                        "     * and one CSS file (e.g. app.css) if your JavaScript imports CSS.",
                        "     */",
                        "    .addEntry('app', './assets/app.js')",
                        "",
                        "    // enables the Symfony UX Stimulus bridge (used in assets/bootstrap.js)",
                        "    .enableStimulusBridge('./assets/controllers.json')",
                        "",
                        "    // When enabled, Webpack \"splits\" your files into smaller pieces for greater optimization.",
                        "    .splitEntryChunks()",
                        "",
                        "    // will require an extra script tag for runtime.js",
                        "    // but, you probably want this, unless you're building a single-page app",
                        "    .enableSingleRuntimeChunk()",
                        "",
                        "    /*",
                        "     * FEATURE CONFIG",
                        "     *",
                        "     * Enable & configure other features below. For a full",
                        "     * list of features, see:",
                        "     * https://symfony.com/doc/current/frontend.html#adding-more-features",
                        "     */",
                        "    .cleanupOutputBeforeBuild()",
                        "    .enableBuildNotifications()",
                        "    .enableSourceMaps(!Encore.isProduction())",
                        "    // enables hashed filenames (e.g. app.abc123.css)",
                        "    .enableVersioning(Encore.isProduction())",
                        "",
                        "    .configureBabel((config) => {",
                        "        config.plugins.push('@babel/plugin-proposal-class-properties');",
                        "    })",
                        "",
                        "    // enables @babel/preset-env polyfills",
                        "    .configureBabelPresetEnv((config) => {",
                        "        config.useBuiltIns = 'usage';",
                        "        config.corejs = 3;",
                        "    })",
                        "",
                        "    // enables Sass/SCSS support",
                        "    //.enableSassLoader()",
                        "",
                        "    // uncomment if you use TypeScript",
                        "    //.enableTypeScriptLoader()",
                        "",
                        "    // uncomment if you use React",
                        "    //.enableReactPreset()",
                        "",
                        "    // uncomment to get integrity=\"...\" attributes on your script & link tags",
                        "    // requires WebpackEncoreBundle 1.4 or higher",
                        "    //.enableIntegrityHashes(Encore.isProduction())",
                        "",
                        "    // uncomment if you're having problems with a jQuery plugin",
                        "    //.autoProvidejQuery()",
                        ";",
                        "",
                        "if (Encore.isDev()) {",
                        "    // Disable CSS extraction in Dev, as HMR does not work properly with MiniCssExtractPlugin.",
                        "    Encore.disableCssExtraction();",
                        "}",
                        "",
                        "module.exports = Encore.getWebpackConfig();",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "6ff8e06a4daf3a22e211fbcbfca376f0964ac696"
        }
    }
}
